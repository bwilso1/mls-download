import inspect
import requests
import os
from bs4 import BeautifulSoup

BASE_URL='https://matrix.brightmls.com/Matrix/Public/'
DEFAULT_SAVE_DIRECTORY =  os.getcwd() + '\\output\\'
def launch(url = None, save_location = None):
	if url is None:
		print("you need to type a url to start")
		url =  "https://matrix.brightmls.com/Matrix/Public/PhotoPopup.aspx?tid=9&mtid=1&L=1&key=627224603&n=21&i=0&View=G"
	if save_location is not None:
		if os.path.isdir(save_location):
			global DEFAULT_SAVE_DIRECTORY
			DEFAULT_SAVE_DIRECTORY = save_location
		else:
			print("given path was not valid...\nFAIL: %s\nusing... %s" % (save_location,DEFAULT_SAVE_DIRECTORY ))
	
	page = requests.get(url)
	soup = BeautifulSoup(page.text, 'html5lib')
	tables = soup.find_all('tr', {'class': 'imageRow'})
	for tr in tables:
		for x in parseGalleryTables(tr):
			print(x)
	
def saveFile(link, targetFilename):
	print('not done')
	# check for filename existing.
	# incrememnt numbers till done
	# scrub '/' '\' '<' '>' '*' '"' '|' from filename first		
	
	#this works in console
	# urllib.request.urlretrieve( <link>, <filename>)
	
	
def parseGalleryTables(tr_imageRow):
	"""
	Name:		parseGalleryTables
	return:		list of html links
	
	Purpose: 	take a table row, and parse for IMG links
				return a list of all links found
	"""
	tmp = tr_imageRow.find_all('a')
	results = []
	for elm in tmp:
		results.append(BASE_URL + str(elm['href']) )
	
	return results

		
def grabPhotoLinkFromPage(url=None):
	"""
	Name:		grabPhotoLinkFromPage
	return:		tuple of IMG link, and photo title
	
	Purpose: 	take links generated by parseGalleryTables	
				and return the direct IMG link and it's title
				as a tuple (link, title)
	"""
	if url is None:
		url = "https://matrix.brightmls.com/Matrix/Public/PhotoPopup.aspx?tid=9&mtid=1&L=1&key=627224603&n=21&i=0&View=Y"
	page = requests.get(url)
	soup = BeautifulSoup(page.text, 'html5lib')
	imgs = soup.find_all('img', {'class' : 'IV_Image'})
	titles = soup.find_all('div', {'id': 'PopupCaption'})

	return imgs[0]['src'], titles[0].text
		
	
if __name__ == "__main__":
	launch()
else:
	print("type launch() to run")